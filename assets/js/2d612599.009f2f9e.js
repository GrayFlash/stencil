"use strict";(self.webpackChunkstencil=self.webpackChunkstencil||[]).push([[93],{3839:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=n(7462),s=n(3366),i=(n(7294),n(3905)),o=["components"],l={},a="Stencil nodejs client",c={unversionedId:"clients/js",id:"clients/js",isDocsHomePage:!1,title:"Stencil nodejs client",description:"Stencil nodejs client package provides a store to lookup protobuf descriptors and options to keep the protobuf descriptors upto date.",source:"@site/docs/clients/js.md",sourceDirName:"clients",slug:"/clients/js",permalink:"/stencil/docs/clients/js",editUrl:"https://github.com/odpf/stencil/edit/master/docs/docs/clients/js.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Java Client for Stencil",permalink:"/stencil/docs/clients/java"},next:{title:"Contribution Process",permalink:"/stencil/docs/contribute/contribution"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"Creating a client",id:"creating-a-client",children:[]},{value:"Creating a multiURLClient",id:"creating-a-multiurlclient",children:[]},{value:"Get proto descriptor type",id:"get-proto-descriptor-type",children:[]},{value:"Encode/Decode message",id:"encodedecode-message",children:[]}]},{value:"Setting up development environment",id:"setting-up-development-environment",children:[{value:"Prerequisite Tools",id:"prerequisite-tools",children:[]}]},{value:"Versioning",id:"versioning",children:[]}],d={toc:p};function u(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stencil-nodejs-client"},"Stencil nodejs client"),(0,i.kt)("p",null,"Stencil nodejs client package provides a store to lookup protobuf descriptors and options to keep the protobuf descriptors upto date."),(0,i.kt)("p",null,"It has following features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ability to refresh protobuf descriptors in specified intervals"),(0,i.kt)("li",{parentName:"ul"},"Support to download descriptors from multiple urls")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --save @odpf/stencil\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"creating-a-client"},"Creating a client"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const { Stencil } = require("stencil");\n\nconst url = "http://url/to/proto/descriptorset/file";\nconst client = await Stencil.getInstance(url, {\n  shouldRefresh: true,\n  refreshInterval: 43200, // 12 hrs\n});\n')),(0,i.kt)("h3",{id:"creating-a-multiurlclient"},"Creating a multiURLClient"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const { MultiURLStencil } = require("stencil");\n\nconst url1 = "http://url/to/proto/descriptorset/file";\nconst url2 = "http://url/to/proto/descriptorset/file2";\nconst client = await MultiURLStencil.getInstance([url1, url2], {\n  shouldRefresh: true,\n  refreshInterval: 43200, // 12 hrs\n});\n')),(0,i.kt)("h3",{id:"get-proto-descriptor-type"},"Get proto descriptor type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const { Stencil } = require("stencil");\n\nconst url = "http://url/to/proto/descriptorset/file";\nconst client = await Stencil.getInstance(url, {\n  shouldRefresh: false,\n});\nconst type = client.getType("google.protobuf.DescriptorProto");\n')),(0,i.kt)("h3",{id:"encodedecode-message"},"Encode/Decode message"),(0,i.kt)("p",null,"Let's say we want to encode message for below proto message defniniton"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-proto"},'syntax = "proto3";\n\npackage test;\n\nmessage One {\n  int64 field_one = 1;\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { Stencil } = require('stencil');\n\nconst url = 'http://url/to/proto/descriptorset/file';\nconst client = await Stencil.getInstance(url, {\n  shouldRefresh: false\n});\nconst type = client.getType('test.One');\n// Encode\nconst msg = { field_one: 10 };\nconst errs = type.verify(msg);\nif errs {\n   throw new Error(`unable to serialize message: ${errs}`);\n}\nconst encodedBuffer = type.encode(msg).finish();\n// Decode\nconst decodedType = type.decode(encodedBuffer);\nconsole.log(decodedType.toObject())\n")),(0,i.kt)("h2",{id:"setting-up-development-environment"},"Setting up development environment"),(0,i.kt)("h3",{id:"prerequisite-tools"},"Prerequisite Tools"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/"},"Node.js")," (version >= 12.0.0)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://git-scm.com/"},"Git"))),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Clone the repo"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ git clone https://github.com/odpf/stencil\n$ cd stencil/clients/js\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install dependencies"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ npm install\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the tests. All of the tests are written with ",(0,i.kt)("a",{parentName:"p",href:"https://jestjs.io/"},"jest"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ npm test\n")))),(0,i.kt)("h2",{id:"versioning"},"Versioning"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"http://semver.org/"},"SemVer")," for versioning. For the versions available, see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/odpf/stencil/tags"},"tags"),"."))}u.isMDXComponent=!0}}]);