"use strict";(self.webpackChunkstencil=self.webpackChunkstencil||[]).push([[128],{8495:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return d},default:function(){return m}});var i=n(7462),r=n(3366),s=(n(7294),n(3905)),a=["components"],o={},c="Introduction",u={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"Key Features",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/stencil/docs/introduction",editUrl:"https://github.com/odpf/stencil/edit/master/docs/docs/introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",next:{title:"Quick start guide",permalink:"/stencil/docs/guides/quick_start"}},d=[{value:"Key Features",id:"key-features",children:[]}],l={toc:d};function m(e){var t=e.components,o=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,i.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,(0,s.kt)("img",{src:n(97).Z})),(0,s.kt)("h2",{id:"key-features"},"Key Features"),(0,s.kt)("p",null,"Discover why users choose Stencil as their main schema registry"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Version history")," Stencil stores versioned history of schemas on specified namespace and name"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Compatibility")," Provides different compatibility modes for schemas during the upload"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Descriptor fetch")," ability to download schemas"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Metadata")," provides metadata API to retrieve latest version number given a name and namespace"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Clients in multiple languages")," Stencil provides clients in GO, JAVA, JS languages to interact with Stencil server and deserialize messages using dynamic schema")))}m.isMDXComponent=!0},97:function(e,t,n){t.Z=n.p+"assets/images/overview-fb35fe6ae05424bd6e03e7dcbad19223.svg"}}]);